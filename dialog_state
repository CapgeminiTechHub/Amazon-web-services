# adds items to inventory
def add_value_to_db(event, name, quan_to_add, db):

    dialog_state = event['request']['dialogSate']
    # confirm_stat = event['request']['confirmationStatus']

    if dialog_state in ("STARTED", "IN_PROGRESS"):
        return continue_dialog()

    else:
        card_title = "Tech Hub"
        reprompt_text = "I'm sorry - I didn't understand. How can I help you?"
        try:
            quantity = db.get_item(TableName='TechHubInventory', Key={'name': {'S': name}})
            quantity = int(quantity['Item']['quantity']['N'])
            db.update_item(TableName='TechHubInventory', Key={'name': {'S': name}},
                        UpdateExpression=' SET quantity = :newquantity ',
                        ExpressionAttributeValues={':newquantity': {'N': str(quantity + quan_to_add)}})
            if quantity + quan_to_add > 1:
                output = "There are now %s %s in the inventory" % (quantity + quan_to_add, plu(name))
            else:
                output = "There is now %s %s in the inventory" % (quantity + quan_to_add, sing(name))
        except:
            db.update_item(TableName='TechHubInventory', Key={'name': {'S': name}},
                        UpdateExpression=' SET quantity = :newquantity ',
                        ExpressionAttributeValues={':newquantity': {'N': str(quan_to_add)}})
            if quan_to_add + quantity > 1:
                output = "There are now %s %s in the inventory" % (quan_to_add, plu(name))
            else:
                output = "There is now %s %s in the inventory" % (quan_to_add, plu(name))

        return build_response({}, build_speechlet_response(card_title, output, reprompt_text, False))


def continue_dialog():

    message = {}
    message['shouldEndSession'] = False
    message['directives'] = [{'type': 'dialog.Delegate'}]
    #message['directives'] = [{'type': 'dialog.ConfirmIntent'}]
    return build_response(message)
    
    
    
    
    
    
      if intent_name == 'add_value_to_db':
        name = sing(intent_request['intent']['slots']['name']['value'])
        quan_to_add = int(intent_request['intent']['slots']['quan_to_add']['value'])
        return add_value_to_db(event, name, quan_to_add, dynamodb)
